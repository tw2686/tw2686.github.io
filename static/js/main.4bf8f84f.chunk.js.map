{"version":3,"sources":["docs/JWong_Resume_Spring2020.pdf","components/landingpage.js","components/about.js","components/contact.js","components/projects.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Landing","style","width","margin","id","className","col","href","rel","target","aria-hidden","Component","About","Contact","background","Projects","shadow","color","height","border","colored","name","Main","App","fixedHeader","title","waterfall","Pdf","size","type","logo","Date","getFullYear","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4bf8f84f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/JWong_Resume_Spring2020.cfa464d5.pdf\";","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass Landing extends Component {\n    render() {\n        return (\n            <div style={{width: '100%', margin: 'auto'}} id=\"landing\">\n                <Grid className=\"landing-grid\">\n                    <Cell col={12}>\n\n                        <div className=\"banner-text\">\n                            <h1>James Wong</h1>\n                            <hr/>\n                            <p>BS Computer Science, Columbia University, Class of 2020</p>\n                            <Grid className=\"social-links\">\n                                <Cell col={4}>\n                                    {/* Email */}\n                                    <a href={\"mailto: tw2686@columbia.edu\"} rel=\"noopener noreferrer\" target=\"_blank\">\n                                        <i className=\"fa fa-envelope-square\" aria-hidden=\"true\"></i>\n                                    </a>\n                                </Cell>\n                                <Cell col={4}>\n                                    {/* LinkedIn */}\n                                    <a href=\"https://www.linkedin.com/in/jameswong912/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                                        <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\"></i>\n                                    </a>\n                                </Cell>\n                                <Cell col={4}>\n                                    {/* Github */}\n                                    <a href=\"https://github.com/tw2686\" rel=\"noopener noreferrer\" target=\"_blank\">\n                                        <i className=\"fa fa-github-square\" aria-hidden=\"true\"></i>\n                                    </a>\n                                </Cell>\n                            </Grid>\n\n                            {/*<div className=\"landing-buttons\">\n                                <Button id=\"resume-button\" href={Pdf} rel=\"noopener noreferrer\" target=\"_blank\">Resume</Button>\n                                <Button id=\"resume-button\" href=\"#projects\">Projects</Button>\n                                </div>*/}\n\n                            </div>\n\n                        </Cell>\n                    </Grid>\n                </div>\n            )\n        }\n    }\n\n    export default Landing;\n","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass About extends Component {\n    render() {\n        return (\n            <div id=\"about\">\n                <Grid className=\"about-grid\">\n                    <Cell col={12}>\n                        <h1>About</h1>\n                        <hr/>\n                        <div className=\"about-content\">\n                            <p>\n                                Hi, my name is James. I am currently studying at Columbia University, NY for my B.S. I am majoring in Computer Science with focuses on artifical intelligence and software systems. I also have a B.A degree from Albion College, MI in Engineering Physics, and minor in Applied Mathematics.\n                            </p>\n                            <p>\n                                Most recently, I interned at DLD Asset Management, LP, a hedge fund at New York. I developed full stack web applications to help portfolio managers visualize data and manage risk. Previously, I've interned at Deloitte, SUNeVision Holdings, a big data center company, and the IT department at Albion College.\n                            </p>\n                        </div>\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass Contact extends Component {\n    render() {\n        return (\n            <div style={{width: '100%', margin: 'auto', background: '#ECEFF1'}}>\n                <Grid className=\"contact-title\" id=\"contact\">\n                    <Cell col={12}>\n                        <h1>Contact</h1>\n                        <hr/>\n                    </Cell>\n                </Grid>\n                <Grid className=\"contact-grid\">\n                    <Cell col={4}>\n                        {/* Email */}\n                        <a href={\"mailto: tw2686@columbia.edu\"} rel=\"noopener noreferrer\" target=\"_blank\">\n                            <i className=\"fa fa-envelope-square\" aria-hidden=\"true\"></i>\n                        </a>\n                        <p>tw2686@columbia.edu</p>\n                    </Cell>\n                    <Cell col={4}>\n                        {/* Phone */}\n                        <div>\n                            <i className=\"fa fa-phone-square\" aria-hidden=\"true\"></i>\n                        </div>\n                        <p>(734) 623-3650</p>\n                    </Cell>\n                    <Cell col={4}>\n\n                        {/* LinkedIn */}\n                        <a href=\"https://www.linkedin.com/in/jameswong912/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                            <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\"></i>\n                        </a>\n                        <p>LinkedIn://jameswong912</p>\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, CardText, IconButton } from 'react-mdl';\n\nclass Projects extends Component {\n    render() {\n        return (\n            <div style={{width: '100%', margin: 'auto'}} id=\"projects\">\n                <div className=\"projects-title\">\n                    <h1>Projects</h1>\n                    <hr/>\n                </div>\n                <Grid className=\"projects-grid\">\n                    <Cell col={4}>\n                        { /* Project 1 */ }\n                        <Card shadow={0} style={{width: '80%', margin: 'auto'}}>\n                            <CardTitle style={{color: '#fff', height: '176px', background: 'url(http://www.getmdl.io/assets/demos/welcome_card.jpg) center / cover'}}>Project 1</CardTitle>\n                            <CardText>\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                                Mauris sagittis pellentesque lacus eleifend lacinia...\n                            </CardText>\n                            <CardActions border>\n                                <Button colored>GitHub</Button>\n                                <Button colored>Demo</Button>\n                            </CardActions>\n                            <CardMenu style={{color: '#fff'}}>\n                                <IconButton name=\"share\" />\n                            </CardMenu>\n                        </Card>\n                    </Cell>\n\n                    <Cell col={4}>\n                        { /* Project 2 */ }\n                        <Card shadow={0} style={{width: '80%', margin: 'auto'}}>\n                            <CardTitle style={{color: '#fff', height: '176px', background: 'url(http://www.getmdl.io/assets/demos/welcome_card.jpg) center / cover'}}>Project 2</CardTitle>\n                            <CardText>\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                                Mauris sagittis pellentesque lacus eleifend lacinia...\n                            </CardText>\n                            <CardActions border>\n                                <Button colored>GitHub</Button>\n                                <Button colored>Demo</Button>\n                            </CardActions>\n                            <CardMenu style={{color: '#fff'}}>\n                                <IconButton name=\"share\" />\n                            </CardMenu>\n                        </Card>\n                    </Cell>\n                    <Cell col={4}>\n                        { /* Project 3 */ }\n                        <Card shadow={0} style={{width: '80%', margin: 'auto'}}>\n                            <CardTitle style={{color: '#fff', height: '176px', background: 'url(http://www.getmdl.io/assets/demos/welcome_card.jpg) center / cover'}}>Project 3</CardTitle>\n                            <CardText>\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                                Mauris sagittis pellentesque lacus eleifend lacinia...\n                            </CardText>\n                            <CardActions border>\n                                <Button colored>GitHub</Button>\n                                <Button colored>Demo</Button>\n                            </CardActions>\n                            <CardMenu style={{color: '#fff'}}>\n                                <IconButton name=\"share\" />\n                            </CardMenu>\n                        </Card>\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Projects;\n","import React from 'react';\nimport LandingPage from './landingpage';\nimport About from './about';\nimport Contact from './contact';\nimport Projects from './projects';\n\nconst Main = () => (\n    <div>\n        <LandingPage/>\n        <About/>\n        <Projects/>\n        <Contact/>\n    </div>\n)\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content, Footer, FooterSection } from 'react-mdl';\nimport Main from './components/main';\nimport Pdf from './docs/JWong_Resume_Spring2020.pdf';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"demo-big-content\">\n\n                <Layout fixedHeader>\n                    <Header className=\"header-color\" title={<a href=\"#landing\">James Wong</a>} waterfall>\n                        <Navigation className=\"nav-style\">\n                            <a href=\"#about\">About</a>\n                            <a href={Pdf} rel=\"noopener noreferrer\" target=\"_blank\">Resume</a>\n                            <a href=\"#projects\">Projects</a>\n                            <a href=\"#contact\">Contact</a>\n                        </Navigation>\n                    </Header>\n                    <Drawer id=\"drawerID\" className=\"drawer-color\" title={<a href=\"#landing\">James Wong</a>}>\n                        <Navigation className=\"drawer-style\">\n                            <a href=\"#about\">About</a>\n                            <a href={Pdf} rel=\"noopener noreferrer\" target=\"_blank\">Resume</a>\n                            <a href=\"#projects\">Projects</a>\n                            <a href=\"#contact\">Contact</a>\n                        </Navigation>\n                    </Drawer>\n                    <Content>\n                        <div className=\"page-content\" />\n                        <Main></Main>\n                        <Footer size=\"mini\">\n                            <FooterSection type=\"left\" logo={<div>&copy; James Wong {new Date().getFullYear()}</div>}>\n                            </FooterSection>\n                        </Footer>\n                    </Content>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}